// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc2
// source: proto/screen.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompressionType int32

const (
	CompressionType_PNG  CompressionType = 0
	CompressionType_JPEG CompressionType = 1
	CompressionType_RLE  CompressionType = 2
)

// Enum value maps for CompressionType.
var (
	CompressionType_name = map[int32]string{
		0: "PNG",
		1: "JPEG",
		2: "RLE",
	}
	CompressionType_value = map[string]int32{
		"PNG":  0,
		"JPEG": 1,
		"RLE":  2,
	}
)

func (x CompressionType) Enum() *CompressionType {
	p := new(CompressionType)
	*p = x
	return p
}

func (x CompressionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_screen_proto_enumTypes[0].Descriptor()
}

func (CompressionType) Type() protoreflect.EnumType {
	return &file_proto_screen_proto_enumTypes[0]
}

func (x CompressionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressionType.Descriptor instead.
func (CompressionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_screen_proto_rawDescGZIP(), []int{0}
}

type CursorPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *CursorPoint) Reset() {
	*x = CursorPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_screen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorPoint) ProtoMessage() {}

func (x *CursorPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_screen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorPoint.ProtoReflect.Descriptor instead.
func (*CursorPoint) Descriptor() ([]byte, []int) {
	return file_proto_screen_proto_rawDescGZIP(), []int{0}
}

func (x *CursorPoint) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *CursorPoint) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type CursorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CbSize      int32        `protobuf:"varint,1,opt,name=CbSize,proto3" json:"CbSize,omitempty"`
	Flags       int32        `protobuf:"varint,2,opt,name=Flags,proto3" json:"Flags,omitempty"`
	HCursor     int64        `protobuf:"varint,4,opt,name=HCursor,proto3" json:"HCursor,omitempty"`
	PtScreenPos *CursorPoint `protobuf:"bytes,5,opt,name=PtScreenPos,proto3" json:"PtScreenPos,omitempty"`
}

func (x *CursorInfo) Reset() {
	*x = CursorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_screen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorInfo) ProtoMessage() {}

func (x *CursorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_screen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorInfo.ProtoReflect.Descriptor instead.
func (*CursorInfo) Descriptor() ([]byte, []int) {
	return file_proto_screen_proto_rawDescGZIP(), []int{1}
}

func (x *CursorInfo) GetCbSize() int32 {
	if x != nil {
		return x.CbSize
	}
	return 0
}

func (x *CursorInfo) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *CursorInfo) GetHCursor() int64 {
	if x != nil {
		return x.HCursor
	}
	return 0
}

func (x *CursorInfo) GetPtScreenPos() *CursorPoint {
	if x != nil {
		return x.PtScreenPos
	}
	return nil
}

type ScreenUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width           int32           `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height          int32           `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	ImageData       []byte          `protobuf:"bytes,3,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
	Timestamp       int64           `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsPartial       bool            `protobuf:"varint,5,opt,name=is_partial,json=isPartial,proto3" json:"is_partial,omitempty"`
	X               int32           `protobuf:"varint,6,opt,name=x,proto3" json:"x,omitempty"`
	Y               int32           `protobuf:"varint,7,opt,name=y,proto3" json:"y,omitempty"`
	ScreenIndex     int32           `protobuf:"varint,8,opt,name=screen_index,json=screenIndex,proto3" json:"screen_index,omitempty"`
	ScreenWidth     int32           `protobuf:"varint,9,opt,name=screen_width,json=screenWidth,proto3" json:"screen_width,omitempty"`
	ScreenHeight    int32           `protobuf:"varint,10,opt,name=screen_height,json=screenHeight,proto3" json:"screen_height,omitempty"`
	CompressionType CompressionType `protobuf:"varint,11,opt,name=compression_type,json=compressionType,proto3,enum=godesk.CompressionType" json:"compression_type,omitempty"`
	Cursor          *CursorInfo     `protobuf:"bytes,12,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ScreenUpdate) Reset() {
	*x = ScreenUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_screen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenUpdate) ProtoMessage() {}

func (x *ScreenUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_screen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenUpdate.ProtoReflect.Descriptor instead.
func (*ScreenUpdate) Descriptor() ([]byte, []int) {
	return file_proto_screen_proto_rawDescGZIP(), []int{2}
}

func (x *ScreenUpdate) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ScreenUpdate) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ScreenUpdate) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *ScreenUpdate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ScreenUpdate) GetIsPartial() bool {
	if x != nil {
		return x.IsPartial
	}
	return false
}

func (x *ScreenUpdate) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ScreenUpdate) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ScreenUpdate) GetScreenIndex() int32 {
	if x != nil {
		return x.ScreenIndex
	}
	return 0
}

func (x *ScreenUpdate) GetScreenWidth() int32 {
	if x != nil {
		return x.ScreenWidth
	}
	return 0
}

func (x *ScreenUpdate) GetScreenHeight() int32 {
	if x != nil {
		return x.ScreenHeight
	}
	return 0
}

func (x *ScreenUpdate) GetCompressionType() CompressionType {
	if x != nil {
		return x.CompressionType
	}
	return CompressionType_PNG
}

func (x *ScreenUpdate) GetCursor() *CursorInfo {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type ScreenUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxWidth  int32 `protobuf:"varint,1,opt,name=max_width,json=maxWidth,proto3" json:"max_width,omitempty"`
	MaxHeight int32 `protobuf:"varint,2,opt,name=max_height,json=maxHeight,proto3" json:"max_height,omitempty"`
	Quality   int32 `protobuf:"varint,3,opt,name=quality,proto3" json:"quality,omitempty"` // 1-100, 影响压缩质量
}

func (x *ScreenUpdateRequest) Reset() {
	*x = ScreenUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_screen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenUpdateRequest) ProtoMessage() {}

func (x *ScreenUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_screen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenUpdateRequest.ProtoReflect.Descriptor instead.
func (*ScreenUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_screen_proto_rawDescGZIP(), []int{3}
}

func (x *ScreenUpdateRequest) GetMaxWidth() int32 {
	if x != nil {
		return x.MaxWidth
	}
	return 0
}

func (x *ScreenUpdateRequest) GetMaxHeight() int32 {
	if x != nil {
		return x.MaxHeight
	}
	return 0
}

func (x *ScreenUpdateRequest) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

var File_proto_screen_proto protoreflect.FileDescriptor

var file_proto_screen_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x6f, 0x64, 0x65, 0x73, 0x6b, 0x22, 0x29, 0x0a, 0x0b,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x62, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x48, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x35,
	0x0a, 0x0b, 0x50, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x50, 0x74, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x50, 0x6f, 0x73, 0x22, 0x8f, 0x03, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x6b, 0x0a, 0x13, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x78, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x2a, 0x2d, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4e, 0x47, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x4c,
	0x45, 0x10, 0x02, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x75, 0x69, 0x66, 0x65, 0x69, 0x2f, 0x67, 0x6f, 0x64, 0x65, 0x73, 0x6b, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_screen_proto_rawDescOnce sync.Once
	file_proto_screen_proto_rawDescData = file_proto_screen_proto_rawDesc
)

func file_proto_screen_proto_rawDescGZIP() []byte {
	file_proto_screen_proto_rawDescOnce.Do(func() {
		file_proto_screen_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_screen_proto_rawDescData)
	})
	return file_proto_screen_proto_rawDescData
}

var file_proto_screen_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_screen_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_screen_proto_goTypes = []any{
	(CompressionType)(0),        // 0: godesk.CompressionType
	(*CursorPoint)(nil),         // 1: godesk.CursorPoint
	(*CursorInfo)(nil),          // 2: godesk.CursorInfo
	(*ScreenUpdate)(nil),        // 3: godesk.ScreenUpdate
	(*ScreenUpdateRequest)(nil), // 4: godesk.ScreenUpdateRequest
}
var file_proto_screen_proto_depIdxs = []int32{
	1, // 0: godesk.CursorInfo.PtScreenPos:type_name -> godesk.CursorPoint
	0, // 1: godesk.ScreenUpdate.compression_type:type_name -> godesk.CompressionType
	2, // 2: godesk.ScreenUpdate.cursor:type_name -> godesk.CursorInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_screen_proto_init() }
func file_proto_screen_proto_init() {
	if File_proto_screen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_screen_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CursorPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_screen_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CursorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_screen_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ScreenUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_screen_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ScreenUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_screen_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_screen_proto_goTypes,
		DependencyIndexes: file_proto_screen_proto_depIdxs,
		EnumInfos:         file_proto_screen_proto_enumTypes,
		MessageInfos:      file_proto_screen_proto_msgTypes,
	}.Build()
	File_proto_screen_proto = out.File
	file_proto_screen_proto_rawDesc = nil
	file_proto_screen_proto_goTypes = nil
	file_proto_screen_proto_depIdxs = nil
}
